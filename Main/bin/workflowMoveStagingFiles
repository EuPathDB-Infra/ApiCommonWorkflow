#!/usr/bin/perl

my $project = $ARGV[0];
my $version = $ARGV[1];
my $stagingDir = $ARGV[2];
my $targetDir = $ARGV[3];

# example stagingDir:  /eupath/data/apiSiteFilesStaging/PlasmoFlow/rbld

# example targetDir:  /eupath/data/apiSitefiles

usage() unless $stagingDir && $targetDir;

processTopDir('downloadSite', $stagingDir, $targetDir);
processTopDir('webServices', $stagingDir, $targetDir);

sub processTopDir {
  my ($type, $stagingDir, $targetDir, $project, $version) = @_;

  # confirm that stagingDir is populated
  my $s = "$stagingDir/$type/$project/release-CURRENT";
  die "stagingDir $s does not exist\n" unless -e $s;

  # confirm that targetDir exists
  die "targetDir '$targetDir/$type' is not a directory that exists" unless -d "$targetDir/$type";

  # confirm that targetDir is empty
  my $t = "$targetDir/$type/$project/release-$version";
  die "targetDir $t already exists\n" if -e $t;

  my $targetWebServicesDir = "$stagingDir/webServices/$project/release-CURRENT";
  die "stagingDir $stagingWebServicesDir does not exist\n" unless -e $stagingWebServicesDir;

  runCmd("mkdir -p $targetDir/$type/$project");
  runCmd("cp -r $s $t");

  renameFilesInDir("$targetDir/$type/$project", $version);
}

# assume that only file names need changing, not dirs
sub renameFilesInDir {
  my ($dir, $version) = @_;

  opendir(my $dh, $dir) || die "can't opendir $dir: $!\n";
  my @files = readdir($dh);
  closedir $dh;
  foreach my $f (@files) {
    if (-d $f) {
      renameFilesInDir($f);
    } elsif ($f =~ /CURRENT/) {
      my $new = $f;
      $new =~ s/CURRENT/$version/;
      rename($f, $new) || die "Error: could not rename $f to $new\n";
    }
  }
}

sub runCmd {
  my ($cm) = @_;
  system($cmd);
  my $status = $? >> 8;
  die "Error running command:\n$cmd\n $?" if $status;
}





