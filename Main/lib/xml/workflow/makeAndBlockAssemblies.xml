<workflowGraph name="makeAndBlockAssemblies">

    <param name="parentDataDir"/>
    <param name="genomeExtDbRlsSpec"/>
    <param name="parentNcbiTaxonId"/>
    <param name="ncbiTaxonId"/>
    <param name="maxIntronSize"/>
    <param name="dataDir"/>
    <param name="assemblySeqsDataDir"/>
    <param name="repeatMaskSpecies"/>
    <param name="makeAssemblies"/>

    <step name="makeDataDir" stepClass="ApiCommonData::Load::WorkflowSteps::MakeDataDir">
      <paramValue name="dataDir">$$dataDir$$</paramValue>
    </step>

    <step name="clusterTranscriptsByGenomeAlignment" stepClass="ApiCommonData::Load::WorkflowSteps::ClusterTranscriptsByGenomeAlignment" includeIf="$$makeAssemblies$$">
      <paramValue name="outputFile">$$dataDir$$/alignedClusters.out</paramValue>
      <paramValue name="parentNcbiTaxonId">$$parentNcbiTaxonId$$</paramValue>
      <paramValue name="genomeExtDbRlsSpec">$$genomeExtDbRlsSpec$$</paramValue>
      <paramValue name="maxIntronSize">$$maxIntronSize$$</paramValue>
      <depends name="makeDataDir"/>
    </step>

   <step name="putUnalignedTranscriptsIntoOneCluster"
          stepClass="ApiCommonData::Load::WorkflowSteps::PutUnalignedTranscriptsIntoOneCluster" includeIf="$$makeAssemblies$$">
      <paramValue name="alignedClustersFile">$$dataDir$$/alignedClusters.out</paramValue>
      <paramValue name="allClustersOutputFile">$$dataDir$$/allClusters.out</paramValue>
      <paramValue name="repeatMaskErrFile">$$assemblySeqsDataDir$$/master/mainresult/blocked.err</paramValue>
      <paramValue name="parentNcbiTaxonId">$$parentNcbiTaxonId$$</paramValue>
      <paramValue name="targetNcbiTaxId">$$ncbiTaxonId$$</paramValue>
      <paramValue name="useTaxonHierarchy">true</paramValue>
      <depends name="clusterTranscriptsByGenomeAlignment"/>
    </step>


   <step name="splitClusterFile"
          stepClass="ApiCommonData::Load::WorkflowSteps::SplitClusterFile" includeIf="$$makeAssemblies$$">
      <paramValue name="inputFile">$$dataDir$$/allClusters.out</paramValue>
      <paramValue name="outputSmallFile">$$dataDir$$/smallClusters.out</paramValue>
      <paramValue name="outputBigFile">$$dataDir$$/bigClusters.out</paramValue>
      <depends name="putUnalignedTranscriptsIntoOneCluster"/>
    </step>

   <step name="makeAndLoadAssembliesFromSmallClusters"
          stepClass="ApiCommonData::Load::WorkflowSteps::MakeAndLoadAssemblies" stepLoadTypes="plugin" includeIf="$$makeAssemblies$$">
      <paramValue name="inputFile">$$dataDir$$/smallClusters.out</paramValue>
      <paramValue name="ncbiTaxonId">$$ncbiTaxonId$$</paramValue>
      <paramValue name="reassemble"></paramValue>
      <depends name="splitClusterFile"/>
    </step>

   <step name="makeAndLoadAssembliesFromBigClusters"
          stepClass="ApiCommonData::Load::WorkflowSteps::MakeAndLoadAssemblies" stepLoadTypes="plugin" includeIf="$$makeAssemblies$$">
      <paramValue name="inputFile">$$dataDir$$/bigClusters.out</paramValue>
      <paramValue name="ncbiTaxonId">$$ncbiTaxonId$$</paramValue>
      <paramValue name="reassemble"></paramValue>
      <depends name="splitClusterFile"/>
    </step>

   <step name="extractAssemblies"
          stepClass="ApiCommonData::Load::WorkflowSteps::ExtractAssemblies">
      <paramValue name="outputFile">$$dataDir$$/assemblies.fsa</paramValue>
      <paramValue name="ncbiTaxonId">$$ncbiTaxonId$$</paramValue>
      <depends name="makeAndLoadAssembliesFromSmallClusters"/>
      <depends name="makeAndLoadAssembliesFromBigClusters"/>
    </step>

    <step name="makeClusterTaskInputDir" stepClass="ApiCommonData::Load::WorkflowSteps::MakeRepeatMaskTaskInputDir">
      <paramValue name="taskInputDir">$$dataDir$$/input</paramValue>
      <paramValue name="seqsFile">$$dataDir$$/assemblies.fsa</paramValue>
      <paramValue name="dangleMax">30</paramValue>
      <paramValue name="options">$$repeatMaskSpecies$$</paramValue>

      <depends name="makeDataDir"/>
      <depends name="extractAssemblies"/>
    </step>

    <step name="mirrorToCluster" stepClass="ApiCommonData::Load::WorkflowSteps::MirrorToComputeCluster" stepLoadTypes="cluster">
      <paramValue name="fileOrDirToMirror">$$dataDir$$</paramValue>
      <depends name="makeClusterTaskInputDir"/>
    </step>

    <step name="runClusterTask" stepClass="ApiCommonData::Load::WorkflowSteps::RunAndMonitorClusterTask" stepLoadTypes="cluster">
      <paramValue name="taskInputDir">$$dataDir$$/input</paramValue>
      <paramValue name="numNodes">1</paramValue>
      <paramValue name="processorsPerNode">1</paramValue>
      <depends name="mirrorToCluster"/>
    </step>

    <step name="mirrorFromCluster" stepClass="ApiCommonData::Load::WorkflowSteps::MirrorFromComputeCluster" stepLoadTypes="cluster">
      <paramValue name="fileOrDirToMirror">$$dataDir$$</paramValue>
      <paramValue name="outputDir">$$dataDir$$/master/mainresult</paramValue>
      <paramValue name="outputFiles">blocked.seq</paramValue>
      <depends name="runClusterTask"/>
    </step>

</workflowGraph>
