<workflowGraph name="runRUMOnCluster">

      <param name="parentDataDir"/>
      <param name="readFilePath"/>
      <param name="genomeFastaFile"/>
      <param name="geneAnnotationFile"/>
      <param name="transcriptFastaFile"/>
      <param name="pairedReadFilePath"/>
      <param name="limitNU"/>
      <param name="numInsertions"/>
      <param name="createSAMFile"/>
      <param name="countMismatches"/>
      <param name="isSNPs"/>
      <param name="strandSpecific"/>
      <param name="keepNode"/>
      <param name="createJunctionsFile"/>
      <param name="variableLengthReads"/>

  <constant name="dataDir">$$parentDataDir$$</constant>

    <step name="makeTaskInputDir" stepClass="ApiCommonWorkflow::Main::WorkflowSteps::MakeRUMTaskInputDir">
      <paramValue name="readFilePath">$$readFilePath$$</paramValue>
      <paramValue name="genomeFastaFile">$$genomeFastaFile$$</paramValue>
      <paramValue name="genomeBowtieIndex"></paramValue>
      <paramValue name="transcriptBowtieIndex"></paramValue>
      <paramValue name="geneAnnotationFile">$$geneAnnotationFile$$</paramValue>
      <paramValue name="transcriptFastaFile">$$transcriptFastaFile$$</paramValue>
      <paramValue name="pairedReadFilePath">$$pairedReadFilePath$$</paramValue>
      <paramValue name="limitNU">$$limitNU$$</paramValue>
      <paramValue name="numInsertions">$$numInsertions$$</paramValue>
      <paramValue name="createSAMFile">$$createSAMFile$$</paramValue>
      <paramValue name="countMismatches">$$countMismatches$$</paramValue>
      <paramValue name="taskInputDir">$$dataDir$$/input</paramValue>
      <paramValue name="masterdir">$$dataDir$$/master</paramValue>
      <paramValue name="SNPs">$$isSNPs$$</paramValue>
      <paramValue name="strandSpecific">$$strandSpecific$$</paramValue>
      <paramValue name="keepNode">$$keepNode$$</paramValue>
      <paramValue name="createJunctionsFile">$$createJunctionsFile$$</paramValue>
      <paramValue name="variableLengthReads">$$variableLengthReads$$</paramValue>
    </step>

    <step name="mirrorToCluster" stepClass="ReFlow::StepClasses::MirrorToComputeCluster">
      <paramValue name="fileOrDirToMirror">$$dataDir$$/input</paramValue>
      <depends name="makeTaskInputDir"/>
    </step>

    <step name="runClusterTask" stepClass="ReFlow::StepClasses::RunAndMonitorDistribJob" stepLoadTypes="cluster">
      <paramValue name="taskInputDir">$$dataDir$$/input</paramValue>
      <paramValue name="numNodes">20</paramValue>
      <paramValue name="processorsPerNode">1</paramValue>
      <depends name="mirrorToCluster"/>
    </step>

    <step name="mirrorFromCluster" stepClass="ReFlow::StepClasses::MirrorFromComputeCluster">
      <paramValue name="fileOrDirToMirror">$$dataDir$$/master</paramValue>
      <paramValue name="outputDir">$$dataDir$$/master/mainresult</paramValue>
      <paramValue name="outputFiles">RUM_Unique.all,RUM_NU.all</paramValue>
      <depends name="runClusterTask"/>
    </step>


</workflowGraph>
