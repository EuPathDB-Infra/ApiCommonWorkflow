<workflowGraph name="blatDnaAgainstGenome">
  <param name="dataDir"/>             <!-- any dir -->
  <param name="maxIntronSize"/>       <!-- ??? -->
  <param name="organismAbbrev"/>      <!-- ${organismAbbrev} -->
  <param name="targetSeqsDir"/>       <!-- genomeSeqsDir -->
  <param name="targetExtDbName"/>     <!-- ${organismAbbrev}_primary_genome_RSRC -->
  <param name="queryFile"/>           <!-- nrdb proteins file -->
  <param name="queryTable"/>          <!-- DoTS::ExternalAASequence -->
  <param name="queryExtDbName"/>      <!-- NRDB_RSRC-->
  <param name="queryIdRegex"/>        <!-- gi\\|(\\d+)\\| -->
  <param name="loadSubjectSubset"/>   <!-- true -->
  <param name="filterByTaxon"/>       <!-- true -->
  <param name="taxonHierarchyForFilter"/> <!-- Eukaryota Apicomplexa Neospora -->
  <param name="shortenSubjectSourceIdTo"/>


  <constant name="blatOutputFile">$$dataDir$$/blat.out</constant>

  <step name="makeDataDir" stepClass="ReFlow::StepClasses::MakeDataDir">
    <paramValue name="dataDir">$$dataDir$$</paramValue>
  </step>

  <step name="makeTaskInputDir" stepClass="ApiCommonWorkflow::Main::WorkflowSteps::MakeGfClientTaskInputDir">
    <paramValue name="taskInputDir">$$dataDir$$/input</paramValue>
    <paramValue name="maxIntronSize">$$maxIntronSize$$</paramValue>
    <paramValue name="queryFile">$$queryFile$$</paramValue>
    <paramValue name="queryType">prot</paramValue>
    <paramValue name="targetDir">$$targetSeqsDir$$</paramValue>
    <depends name="makeDataDir"/>
  </step>

  <step name="mirrorToCluster" stepClass="ReFlow::StepClasses::MirrorToComputeCluster">
    <paramValue name="fileOrDirToMirror">$$dataDir$$</paramValue>
    <depends name="makeTaskInputDir"/>
  </step>

  <step name="runClusterTask" stepClass="ReFlow::StepClasses::RunAndMonitorDistribJob" stepLoadTypes="cluster">
    <paramValue name="taskInputDir">$$dataDir$$/input</paramValue>
    <paramValue name="numNodes">20</paramValue>
    <paramValue name="maxMemoryGigs"></paramValue>
    <paramValue name="processorsPerNode">1</paramValue>
    <depends name="mirrorToCluster"/>
  </step>

  <step name="mirrorFromCluster" stepClass="ReFlow::StepClasses::MirrorFromComputeCluster">
    <paramValue name="fileOrDirToMirror">$$dataDir$$/master</paramValue>
    <paramValue name="outputDir">$$dataDir$$/master/mainresult</paramValue>
    <paramValue name="outputFiles">out.psl</paramValue>
    <depends name="runClusterTask"/>
  </step>

  <step name="fixGenomeSourceIdsInBlatResultFile" stepClass="ApiCommonWorkflow::Main::WorkflowSteps::FixGenomeSourceIdsInBlatResultFile">
    <paramValue name="inputFile">$$dataDir$$/master/mainresult/out.psl</paramValue>
    <paramValue name="queryFile">$$queryFile$$</paramValue>
    <depends name="mirrorFromCluster"/>
  </step>

  <step name="filterResultsByTaxon" stepClass="ApiCommonWorkflow::Main::WorkflowSteps::FilterSimilarityResultsByTaxon" includeIf="$$filterByTaxon$$">
    <paramValue name="taxonHierarchy">$$taxonHierarchyForFilter$$</paramValue>
    <paramValue name="gi2taxidFile">global/taxonomy_RSRC/gi_taxid_prot.dmp</paramValue>
    <paramValue name="inputFileType">blat</paramValue>
    <paramValue name="inputFile">$$dataDir$$/master/mainresult/out.psl</paramValue>
    <paramValue name="unfilteredOutputFile">$$dataDir$$/master/mainresult/out.psl.orig</paramValue>
    <paramValue name="filteredOutputFile">$$dataDir$$/master/mainresult/out.psl</paramValue>
    <depends name="fixGenomeSourceIdsInBlatResultFile"/>
  </step>

  <step name="extractIdsFromBlatResult" stepClass="ApiCommonWorkflow::Main::WorkflowSteps::ExtractIdsFromSimilarityResult" includeIf="$$loadSubjectSubset$$">
    <paramValue name="inputFile">$$dataDir$$/master/mainresult/out.psl</paramValue>
    <paramValue name="inputFileType">blat</paramValue>
    <paramValue name="idType">subject</paramValue>
    <paramValue name="outputFile">$$dataDir$$/similarityIds.out</paramValue>
    <depends name="filterResultsByTaxon"/>
  </step>

  <!-- this step needs a loadBalance=1 to avoid a race condition -->
  <step name="loadQuerySubset" stepClass="ApiCommonWorkflow::Main::WorkflowSteps::InsertFastaSubset" includeIf="$$loadSubjectSubset$$" stepLoadTypes="loadSubjectSubset,plugin">
    <paramValue name="extDbName">$$queryExtDbName$$</paramValue>
    <paramValue name="fastaFile">$$queryFile$$</paramValue>
    <paramValue name="idsFile">$$dataDir$$/similarityIds.out</paramValue>
    <depends name="extractIdsFromBlatResult"/>
  </step>

  <step name="updateTaxonFieldForQuerySubset" stepClass="ApiCommonWorkflow::Main::WorkflowSteps::UpdateTaxonFieldFromFile" includeIf="$$loadSubjectSubset$$" stepLoadTypes="loadSubjectSubset,plugin" undoRoot="loadQuerySubset">
    <paramValue name="extDbName">$$queryExtDbName$$</paramValue>
    <paramValue name="taxIdFile">global/taxonomy_RSRC/gi_taxid_prot.dmp</paramValue>
    <paramValue name="shortenSubjectSourceIdTo">$$shortenSubjectSourceIdTo$$</paramValue>
    <depends name="loadQuerySubset"/>
  </step>

  <step name="insertBlatAlignment" stepClass="ApiCommonWorkflow::Main::WorkflowSteps::InsertBlatAlignment" stepLoadTypes="plugin">

    <paramValue name="organismAbbrev">$$organismAbbrev$$</paramValue>
    <paramValue name="targetExtDbName">$$targetExtDbName$$</paramValue>
    <paramValue name="targetTable">ExternalNASequence</paramValue>
    <paramValue name="queryExtDbName">$$queryExtDbName$$</paramValue>
    <paramValue name="queryTable">$$queryTable$$</paramValue>
    <paramValue name="queryIdRegex">$$queryIdRegex$$</paramValue>
    <paramValue name="action">load</paramValue>
    <paramValue name="percentTop"></paramValue>
    <paramValue name="blatFile">$$dataDir$$/master/mainresult/out.psl</paramValue>
    <paramValue name="queryFile">$$queryFile$$</paramValue>
    <depends name="loadQuerySubset"/>
  </step>

</workflowGraph>
