<workflowGraph name="extractAndBlockDnaSeq">

    <param name="dataDir"/>
    <param name="BACEndsExtDbRlsSpec"/>
    <param name="maxIntronSize"/>
    <param name="repeatMaskSpecies"/>

  <constant name="BACEndsSeqFile">$$dataDir$$/BACEndsSeqs.fsa</constant>


    <step name="makeDataDir" stepClass="ReFlow::StepClasses::MakeDataDir">
      <paramValue name="dataDir">$$dataDir$$</paramValue>
    </step>

  <step name="extractBACEndsSeqs"
          stepClass="ApiCommonWorkflow::Main::WorkflowSteps::ExtractNaSeqs">
      <paramValue name="extDbRlsSpec">$$BACEndsExtDbRlsSpec$$</paramValue>
      <paramValue name="table">ExternalNASequence</paramValue>
      <paramValue name="alternateDefline">na_sequence_id, description, 'length='||length</paramValue>
      <paramValue name="outputFile">$$BACEndsSeqFile$$</paramValue>
      <paramValue name="separateFastaFiles">false</paramValue>
      <paramValue name="outputDirForSeparateFiles"></paramValue>
      <depends name="makeDataDir"/> 
    </step>


    <step name="makeClusterTaskInputDir" stepClass="ApiCommonWorkflow::Main::WorkflowSteps::MakeRepeatMaskTaskInputDir">
      <paramValue name="taskInputDir">$$dataDir$$/input</paramValue>
      <paramValue name="seqsFile">$$BACEndsSeqFile$$</paramValue>
      <paramValue name="dangleMax">30</paramValue>
      <paramValue name="options">$$repeatMaskSpecies$$</paramValue>

      <depends name="makeDataDir"/>
      <depends name="extractBACEndsSeqs"/>
    </step>

    <step name="mirrorToCluster" stepClass="ReFlow::StepClasses::MirrorToComputeCluster">
      <paramValue name="fileOrDirToMirror">$$dataDir$$</paramValue>
      <depends name="makeClusterTaskInputDir"/>
    </step>

    <step name="runClusterTask" stepClass="ReFlow::StepClasses::RunAndMonitorDistribJob" stepLoadTypes="cluster">
      <paramValue name="taskInputDir">$$dataDir$$/input</paramValue>
      <paramValue name="numNodes">1</paramValue>
      <paramValue name="processorsPerNode">1</paramValue>
      <depends name="mirrorToCluster"/>
    </step>

    <step name="mirrorFromCluster" stepClass="ReFlow::StepClasses::MirrorFromComputeCluster">
      <paramValue name="fileOrDirToMirror">$$dataDir$$</paramValue>
      <paramValue name="outputDir">$$dataDir$$/master/mainresult</paramValue>
      <paramValue name="outputFiles">blocked.seq</paramValue>
      <depends name="runClusterTask"/>
    </step>

</workflowGraph>
