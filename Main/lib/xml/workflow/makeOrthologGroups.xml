<workflowGraph name="makeOrthologGroups">
  <param name="parentDataDir"/>
  <param name="proteinFile"/>
  <param name="suffix"/>
  <constant name="localDataDir">$$parentDataDir$$/makeGroups</constant>
  <constant name="goodProteinFile">$$localDataDir$$/protein.fa</constant>

  <!-- create cluster home dir (in normal use, this will happen elsewhere) -->
  <step name="initClusterHomeDir"
        stepClass="ReFlow::StepClasses::InitClusterHomeDir">
  </step>

  <!-- make a data dir  -->
  <step name="makeLocalDataDir" stepClass="ReFlow::StepClasses::MakeDataDir">
    <paramValue name="dataDir">$$localDataDir$$</paramValue>
  </step>

  <!-- copy protein file to our data dir -->
  <!-- as a top-level graph (for development) this will fail. Copy to workflow's data dir, and set step to ready -->
  <step name="copyProteinFile" stepClass="ApiCommonWorkflow::Main::WorkflowSteps::CopyDataDirFile">
    <paramValue name="fromFile">$$proteinFile$$</paramValue>
    <paramValue name="toFile">$$goodProteinFile$$</paramValue>
    <depends name="makeLocalDataDir"/>
  </step>

  <!-- mirror our data dir to the cluster -->
  <step name="mirrorToCluster" stepClass="ReFlow::StepClasses::MirrorToComputeCluster">
    <paramValue name="fileOrDirToMirror">$$localDataDir$$</paramValue>
    <depends name="initClusterHomeDir"/>
    <depends name="copyProteinFile"/>
  </step>

  <!-- format the blast database on the cluster -->
  <step name="makeNrdbBlastDbOnCluster" stepClass="ApiCommonWorkflow::Main::WorkflowSteps::FormatBlastDbOnCluster">
    <paramValue name="inputFile">$$goodProteinFile$$</paramValue>
    <paramValue name="vendor">ncbi</paramValue>
    <paramValue name="seqType">p</paramValue>
    <depends name="mirrorToCluster"/>
  </step>

  <subgraph name="blast" xmlFile="blast.xml">
    <!-- params: orthoAnalysis said "my $blastParams = "-F 'm S' -v 100000 -b 100000 -z 1300000 -e 1e-5"; -->
    <paramValue name="parentDataDir">$$localDataDir$$</paramValue>
    <paramValue name="nickName">blast</paramValue>
    <paramValue name="queryFile">$$goodProteinFile$$</paramValue>
    <paramValue name="subjectFile">$$goodProteinFile$$</paramValue>
    <paramValue name="blastArgs"> -v 100000 -b 100000 -z 1300000 -e 1e-5</paramValue>
    <paramValue name="idRegex">(\\S+)</paramValue>
    <paramValue name="blastType">blastp</paramValue>
    <paramValue name="vendor">ncbi</paramValue>
    <paramValue name="loadSubjectSubset">false</paramValue>
    <paramValue name="filterByTaxon">false</paramValue>
    <paramValue name="maxMemoryGigs">10</paramValue>
    <paramValue name="loadSimilarities">false</paramValue>
    <paramValue name="makeSimSeqsFile">true</paramValue>

    <!-- parameters below are not relevant for us -->
    <paramValue name="queryTable"></paramValue>
    <paramValue name="queryExtDbName"></paramValue>
    <paramValue name="subjectTable"></paramValue>
    <paramValue name="subjectExtDbName"></paramValue>
    <paramValue name="shortenSubjectSourceIdTo"></paramValue>
    <paramValue name="taxonHierarchyForFilter"></paramValue>
    <paramValue name="loadOptions"></paramValue>

    <depends name="makeNrdbBlastDbOnCluster"/>
  </subgraph>

  <!-- &updateBlastEval($mgr,"ProteinSeqs-ProteinSeqs", "blastSimilarity.out.gz","blastSimilarity.out_modified"); -->
  <step name="updateBlastEval" stepClass="ApiCommonWorkflow::Main::WorkflowSteps::UpdateBlastEval">
    <paramValue name="inputFile">$$localDataDir$$/blast/master/mainresult/blastSimilarity.out</paramValue>
    <paramValue name="outputFile">blastSimilarity.out_modified</paramValue>
    <depends name="blast"/>
  </step>

  <!-- #&loadBlastWithSqlldr($mgr,"ProteinSeqs-ProteinSeqs",0,"blastSimilarity.out_modified", "simSeq.ctl"); -->
  <step name="loadBlast" stepClass="ApiCommonWorkflow::Main::WorkflowSteps::LoadBlastWithSqlldr">
    <paramValue name="inputFile">blastSimilarity.out_modified</paramValue>
    <paramValue name="suffix">$$suffix$$</paramValue>
    <depends name="updateBlastEval"/>
  </step>

  <!-- run the orthomclPairs program to compute pairwise relationships.  -->
  <step name="orthomclPairs" stepClass="ApiCommonWorkflow::Main::WorkflowSteps::FindOrthomclPairs">
    <paramValue name="suffix">$$suffix$$</paramValue>
    <depends name="loadBlast"/>
  </step>

  <!-- &makeOrthoPairsFiles ($mgr); -->
  <step name="makePairsFiles" stepClass="ApiCommonWorkflow::Main::WorkflowSteps::MakeOrthoPairsFiles">
    <paramValue name="suffix">$$suffix$$</paramValue>
    <depends name="orthomclPairs"/>
  </step>

  <!-- &runMcl ($mgr, '1.5'); -->
  <step name="runMcl" stepClass="ApiCommonWorkflow::Main::WorkflowSteps::RunMcl">
    <paramValue name="mainInflation"></paramValue>
    <paramValue name="inputFile">mclInput</paramValue>
    <paramValue name="outputFile">mcl.out</paramValue>
    <depends name="makePairsFiles"/>
  </step>

  <!-- &mclOutToGroupsFile ($mgr, "OG5_", 10000);   ##change the startWith number to the largest in the previous build plus 1 -->
  <step name="mclOutToGroupsFile" stepClass="ApiCommonWorkflow::Main::WorkflowSteps::WriteOrthologGroupsFiles">
    <paramValue name="orthomclIdPrefix">OG6_</paramValue>
    <paramValue name="inputFile">mcl.out</paramValue>
    <paramValue name="proteinFile">$$goodProteinFile$$</paramValue>
    <paramValue name="outputFile">orthomclGroups.txt</paramValue>
    <paramValue name="startingOrthologGroupNumber">400000</paramValue>
    <paramValue name="includeSingletons">true</paramValue>
    <depends name="runMcl"/>
  </step>

</workflowGraph>
