<workflowGraph name="proteomeAnalysis">
  <param name="parentDataDir"/>
  <param name="genomeExtDbRlsSpec"/>
  <param name="interproVersion"/>
  <param name="iedbVersion"/>
  <param name="nrdbExtDbRlsSpec"/>
  <param name="ncbiTaxonId"/>
  <param name="nrdbFile"/>
  <param name="nrdbShortDeflineFile"/>
  <param name="nrdbExtDbRlsSpec"/>
  <param name="pdbFile"/>
  <param name="soVersion"/>
  <param name="pdbExtDbRlsSpec"/>
  <param name="goVersion"/>
  <param name="organismName"/>
  <param name="runExportPred"/>
  <param name="mapEpitope"/>

  <constant name="dataDir">$$parentDataDir$$/proteome</constant>
  <constant name="proteinsFile">$$dataDir$$/AnnotatedProteins.fsa</constant>
  <constant name="blastpNrdbArgs">-cpus=2 -topcomboN=1 V=100 B=20 -hspmax=1000000 -gi E=1e-3 -wordmask=seg -hspsepQmax=4000 -span1 W=3 T=1000</constant>
  <constant name="blastpPdbArgs">-cpus=2 -topcomboN=1 V=100 B=20 -hspmax=1000000 -gi E=1e-3 -wordmask=seg -hspsepQmax=4000 -span1</constant>
  <constant name="signalpArgs">-t euk -f short -m nn+hmm -q -trunc 70</constant>

    <step name="calcAASequenceAttributes"
          stepClass="ApiCommonWorkflow::Main::WorkflowSteps::CalculateAASeqAttributes" stepLoadTypes="plugin">
      <paramValue name="genomeExtDbRlsSpec">$$genomeExtDbRlsSpec$$</paramValue>
      <paramValue name="table">DoTS.TranslatedAASequence</paramValue>
      <paramValue name="idSql">select taas.aa_sequence_id, taas.sequence from DoTS.TranslatedAASequence taas, DoTs.AAFeature af, DOTS.NAFeature nf where taas.aa_sequence_id=af.aa_sequence_id and af.na_feature_id=nf.na_feature_id and nf.name not in ('ORF') and taas.external_database_release_id = ?</paramValue>
    </step>

    <step name="makeDataDir" stepClass="ApiCommonWorkflow::Main::WorkflowSteps::MakeDataDir">
      <paramValue name="dataDir">$$dataDir$$</paramValue>
    </step>

    <step name="extractProteins"
          stepClass="ApiCommonWorkflow::Main::WorkflowSteps::ExtractAnnotatedProteinsBySpecies">
      <paramValue name="genomeExtDbRlsSpec">$$genomeExtDbRlsSpec$$</paramValue>
      <paramValue name="ncbiTaxonId">$$ncbiTaxonId$$</paramValue>
      <paramValue name="outputFile">$$proteinsFile$$</paramValue>
      <depends name="makeDataDir"/>
    </step>

    <step name="mirrorProteinsToCluster" stepClass="ApiCommonWorkflow::Main::WorkflowSteps::MirrorToComputeCluster">
      <paramValue name="fileOrDirToMirror">$$dataDir$$</paramValue>
      <depends name="extractProteins"/>
    </step>

    <step name="runTmhmm"
          stepClass="ApiCommonWorkflow::Main::WorkflowSteps::RunTmhmm">
      <paramValue name="proteinsFile">$$proteinsFile$$</paramValue>
      <paramValue name="outputFile">$$dataDir$$/tmhmm.out</paramValue>
      <depends name="extractProteins"/>
    </step>

    <step name="insertTmhmm"
          stepClass="ApiCommonWorkflow::Main::WorkflowSteps::InsertTmhmm" stepLoadTypes="plugin">
      <paramValue name="inputFile">$$dataDir$$/tmhmm.out</paramValue>
      <paramValue name="genomeExtDbRlsSpec">$$genomeExtDbRlsSpec$$</paramValue>
      <depends name="runTmhmm"/>
    </step>

    <step name="document-runTmhmm"
          stepClass="ApiCommonWorkflow::Main::WorkflowSteps::InsertAnalysisMethod">
      <paramValue name="name">Predict transmembrane domains</paramValue>
      <paramValue name="tool">TMHMM</paramValue>
      <paramValue name="version">2.0a</paramValue>
      <paramValue name="category">Proteome</paramValue>
      <paramValue name="input">Protein translations of annotated genes</paramValue>
      <paramValue name="output">Predicted transmembrane domain topology</paramValue>
      <paramValue name="parameters"></paramValue>
      <paramValue name="description">TMHMM is used to predict transmembrane domain presence and topology</paramValue>
      <paramValue name="pubmedId">11152613</paramValue>
      <paramValue name="url"></paramValue>
      <paramValue name="credits"></paramValue>
      <depends name="runTmhmm"/>
    </step>

    <step name="runExportPred"
          stepClass="ApiCommonWorkflow::Main::WorkflowSteps::RunExportPred" includeIf="$$runExportPred$$">
      <paramValue name="proteinsFile">$$proteinsFile$$</paramValue>
      <paramValue name="outputFile">$$dataDir$$/exportPred.out</paramValue>
      <depends name="extractProteins"/>
    </step>

    <step name="insertExportPred"
          stepClass="ApiCommonWorkflow::Main::WorkflowSteps::InsertExportPred" stepLoadTypes="plugin" includeIf="$$runExportPred$$">
      <paramValue name="inputFile">$$dataDir$$/exportPred.out</paramValue>
      <paramValue name="genomeExtDbRlsSpec">$$genomeExtDbRlsSpec$$</paramValue>
      <depends name="runExportPred"/>
    </step>

    <step name="document-runExportPred"
          stepClass="ApiCommonWorkflow::Main::WorkflowSteps::InsertAnalysisMethod">
      <paramValue name="name">Predict export to host</paramValue>
      <paramValue name="tool">ExportPred</paramValue>
      <paramValue name="version">1.0.1</paramValue>
      <paramValue name="category">Proteome</paramValue>
      <paramValue name="input">Protein translations of annotated genes</paramValue>
      <paramValue name="output">Predicted export proteins (and scores)</paramValue>
      <paramValue name="parameters">default</paramValue>
      <paramValue name="description">Program that predicts the exported proteins of Plasmodium.</paramValue>
      <paramValue name="pubmedId">16507167</paramValue>
      <paramValue name="url">http://bioinf.wehi.edu.au/exportpred</paramValue>
      <paramValue name="credits"></paramValue>
      <depends name="runExportPred"/>
    </step>


    <step name="runSignalP"
          stepClass="ApiCommonWorkflow::Main::WorkflowSteps::RunSignalP">
      <paramValue name="proteinsFile">$$proteinsFile$$</paramValue>
      <paramValue name="outputFile">$$dataDir$$/signalP.out</paramValue>
      <paramValue name="options">$$signalpArgs$$</paramValue>
      <depends name="extractProteins"/>
    </step>

    <step name="insertSignalP"
          stepClass="ApiCommonWorkflow::Main::WorkflowSteps::InsertSignalP" stepLoadTypes="plugin">
      <paramValue name="inputFile">$$dataDir$$/signalP.out</paramValue>
      <paramValue name="genomeExtDbRlsSpec">$$genomeExtDbRlsSpec$$</paramValue>
      <depends name="runSignalP"/>
    </step>

    <step name="document-insertSignalP"
          stepClass="ApiCommonWorkflow::Main::WorkflowSteps::InsertAnalysisMethod">
      <paramValue name="name">Predict signal peptides</paramValue>
      <paramValue name="tool">SignalP</paramValue>
      <paramValue name="version">3.0</paramValue>
      <paramValue name="category">Proteome</paramValue>
      <paramValue name="input">Protein translations of annotated genes</paramValue>
      <paramValue name="output">Signal peptide predictions</paramValue>
      <paramValue name="parameters">$$signalpArgs$$</paramValue>
      <paramValue name="description">Identify signal peptides and their likely cleavage sites.</paramValue>
      <paramValue name="pubmedId">15223320</paramValue>
      <paramValue name="url">http://www.cbs.dtu.dk/services/SignalP/</paramValue>
      <paramValue name="credits"></paramValue>
      <depends name="insertSignalP"/>
    </step>

    <subgraph name="mapEpitopesToProteins" xmlFile="epitopesWorkflow.xml" includeIf="$$mapEpitope$$">
      <paramValue name="proteinsFile">$$proteinsFile$$</paramValue>
      <paramValue name="parentDataDir">$$dataDir$$</paramValue>
      <paramValue name="genomeExtDbRlsSpec">$$genomeExtDbRlsSpec$$</paramValue>
      <paramValue name="organismName">$$organismName$$</paramValue>
      <paramValue name="iedbExtDbRlsSpec">Links to IEDB epitopes|$$iedbVersion$$</paramValue>
      <depends name="extractProteins"/>
    </subgraph>

   <step name="runLowComplexityFilter"
          stepClass="ApiCommonWorkflow::Main::WorkflowSteps::RunLowComplexityFilter"> 

      <paramValue name="seqFile">$$proteinsFile$$</paramValue>
      <paramValue name="outputFile">$$proteinsFile$$.seg</paramValue>
      <paramValue name="filterType">seg</paramValue>
      <paramValue name="options">-x</paramValue>
      <depends name="extractProteins"/>
    </step>

    <step name="loadLowComplexityFile"
          stepClass="ApiCommonWorkflow::Main::WorkflowSteps::InsertLowComplexitySequences" stepLoadTypes="plugin">
      <paramValue name="inputFile">$$proteinsFile$$.seg</paramValue>
      <paramValue name="genomeExtDbRlsSpec">$$genomeExtDbRlsSpec$$</paramValue>
      <paramValue name="seqType">protein</paramValue>
      <paramValue name="mask">x</paramValue> 
      <paramValue name="options"></paramValue>
      <depends name="runLowComplexityFilter"/>
    </step>

    <step name="document-runLowComplexityFilter"
          stepClass="ApiCommonWorkflow::Main::WorkflowSteps::InsertAnalysisMethod">
      <paramValue name="name">Filter low complexity protein sequences</paramValue>
      <paramValue name="tool">seg</paramValue>
      <paramValue name="version"></paramValue>
      <paramValue name="category">Proteome</paramValue>
      <paramValue name="input">Protein translations of annotated genes</paramValue>
      <paramValue name="output">Protein sequences containing regions of low complexity masked with the character 'x'</paramValue>
      <paramValue name="parameters">-x</paramValue>
      <paramValue name="description"></paramValue>
      <paramValue name="pubmedId">7952898</paramValue>
      <paramValue name="url"></paramValue>
      <paramValue name="credits"></paramValue>
      <depends name="runLowComplexityFilter"/>
    </step>


    <step name="findNrdbXrefs" stepClass="ApiCommonWorkflow::Main::WorkflowSteps::FindNrdbXrefs">
      <paramValue name="proteinsFile">$$proteinsFile$$</paramValue>
      <paramValue name="nrdbFile">$$nrdbFile$$</paramValue>
      <paramValue name="proteinsFileRegex">^([\\w\\.]+)</paramValue>
      <paramValue name="nrdbFileRegex">^\\|\\d+\\|(?:emb|gb|dbj|ref|sp|pdb)\\|([\\w\\.]+)\\|</paramValue>
      <paramValue name="outputFile">$$dataDir$$/nrdbXrefs.txt</paramValue>
       <depends name="extractProteins"/>
    </step>

    <step name="loadNrdbXrefs" stepClass="ApiCommonWorkflow::Main::WorkflowSteps::LoadNrdbXrefs" stepLoadTypes="plugin">
      <paramValue name="xrefsFile">$$dataDir$$/nrdbXrefs.txt</paramValue>
      <paramValue name="dbAbbrevList">emb,gb,dbj,ref,sp,pdb</paramValue>
      <paramValue name="nrdbExtDbRlsSpec">$$nrdbExtDbRlsSpec$$</paramValue>
      <depends name="findNrdbXrefs"/>
 
    </step>

    <subgraph name="interpro" xmlFile="interproWorkflow.xml">
      <paramValue name="proteinsFile">$$proteinsFile$$</paramValue>
      <paramValue name="parentDataDir">$$dataDir$$</paramValue>
      <paramValue name="interproExtDbRlsSpec">INTERPRO|$$interproVersion$$</paramValue>
      <paramValue name="interproVersion">$$interproVersion$$</paramValue>
      <paramValue name="goVersion">$$goVersion$$</paramValue>
      <depends name="mirrorProteinsToCluster"/>
    </subgraph>

    <step name="document-interpro"
          stepClass="ApiCommonWorkflow::Main::WorkflowSteps::InsertAnalysisMethod">
      <paramValue name="name">Find InterPro Domains</paramValue>
      <paramValue name="tool">InterProScan</paramValue>
      <paramValue name="version">most recent</paramValue>
      <paramValue name="category">Proteome</paramValue>
      <paramValue name="input">Protein translations of annotated genes and the InterPro Domains Database</paramValue>
      <paramValue name="output">Domains matched, description of the InterPro entry, GO description of the Interpro entry and E-value of the match</paramValue>
      <paramValue name="parameters"></paramValue>
      <paramValue name="description">InterProScan scans protein sequences against the protein signatures of the InterPro member databases including PROSITE, PRINTS, xPfam, ProDom,SMART, TIGRFAMs, PIR, SUPERFAMILY.</paramValue>
      <paramValue name="pubmedId">11590104x</paramValue>
      <paramValue name="url">http://www.ebi.ac.uk/InterProScan</paramValue>
      <paramValue name="credits"></paramValue>
      <depends name="interpro"/>
    </step>

    <subgraph name="psipred" xmlFile="psipredWorkflow.xml">
      <paramValue name="nrdbFileShortDefline">$$nrdbShortDeflineFile$$</paramValue>
      <paramValue name="proteinsFile">$$proteinsFile$$</paramValue>
      <paramValue name="parentDataDir">$$dataDir$$</paramValue>
      <paramValue name="organismName">$$organismName$$</paramValue>
      <depends name="mirrorProteinsToCluster"/>
    </subgraph>

    <step name="document-psipred"
          stepClass="ApiCommonWorkflow::Main::WorkflowSteps::InsertAnalysisMethod">
      <paramValue name="name">Predict secondary structure</paramValue>
      <paramValue name="tool">psipred</paramValue>
      <paramValue name="version">2.4</paramValue>
      <paramValue name="category">Proteome</paramValue>
      <paramValue name="input">Protein translations of annotated genes (filtered with seg)</paramValue>
      <paramValue name="output">file containing a residue by residue prediction of helix, strand, and coil accompanied by confidence level</paramValue>
      <paramValue name="parameters">default</paramValue>
      <paramValue name="description">Psipred predicts secondary structure using a neural network analysis of PSI-BLAST output</paramValue>
      <paramValue name="pubmedId">10493868</paramValue>
      <paramValue name="url">http://bioinf.cs.ucl.ac.uk/psipred</paramValue>
      <paramValue name="credits"></paramValue>
      <depends name="psipred"/>
    </step>

    <subgraph name="blastpNrdb" xmlFile="blastWorkflow.xml">
      <paramValue name="parentDataDir">$$dataDir$$</paramValue>
      <paramValue name="nickName">blastpNrdb</paramValue>
      <paramValue name="queryFile">$$proteinsFile$$</paramValue>
      <paramValue name="queryTable">DoTS::TranslatedAASequence</paramValue>
      <paramValue name="queryExtDbRlsSpec">$$genomeExtDbRlsSpec$$</paramValue>
      <paramValue name="subjectFile">$$nrdbShortDeflineFile$$</paramValue>
      <paramValue name="subjectTable">DoTS::ExternalAASequence</paramValue>
      <paramValue name="subjectExtDbRlsSpec">$$nrdbExtDbRlsSpec$$</paramValue>
      <paramValue name="blastArgs">$$blastpNrdbArgs</paramValue>
      <paramValue name="idRegex">gi\\|(\\d+)\\|</paramValue>
      <paramValue name="blastType">blastp</paramValue>
      <paramValue name="vendor">wu</paramValue>
      <paramValue name="loadSubjectSubset">true</paramValue>
      <paramValue name="filterByTaxon">false</paramValue>
      <paramValue name="taxonHierarchyForFilter"></paramValue>
      <paramValue name="loadOptions">--subjectsLimit 50</paramValue>
      <depends name="mirrorProteinsToCluster"/>
    </subgraph>

   <step name="document-blastpNrdb"
          stepClass="ApiCommonWorkflow::Main::WorkflowSteps::InsertAnalysisMethod">
      <paramValue name="name">BLASTP Annotated protein sequences vs. NRDB</paramValue>
      <paramValue name="tool">BLASTP</paramValue>
      <paramValue name="version">2.0 [06-Apr-2005]</paramValue>
      <paramValue name="category">Proteome</paramValue>
      <paramValue name="input">Query: Protein translations of annotated genes and; Subject: NRDB</paramValue>
      <paramValue name="output">BLASTP alignments</paramValue>
      <paramValue name="parameters">$$blastpNrdbArgs$$</paramValue>
      <paramValue name="description">BLASTP translations of annotated genes against NCBI's non-redundant protein database (NRDB).  WU-BLASTP is used to identify statistically significant protein-protein sequence similarities</paramValue>
      <paramValue name="pubmedId">2231712</paramValue>
      <paramValue name="url">http://blast.wustl.edu</paramValue>
      <paramValue name="credits"></paramValue>
      <depends name="blastpNrdb"/>
    </step>

    <subgraph name="blastpPdb" xmlFile="blastWorkflow.xml">
      <paramValue name="parentDataDir">$$dataDir$$</paramValue>
      <paramValue name="nickName">blastpPdb</paramValue>
      <paramValue name="queryFile">$$proteinsFile$$</paramValue>
      <paramValue name="queryTable">DoTS::TranslatedAASequence</paramValue>
      <paramValue name="queryExtDbRlsSpec">$$genomeExtDbRlsSpec$$</paramValue>
      <paramValue name="subjectFile">$$pdbFile$$</paramValue>
      <paramValue name="subjectTable">DoTS::ExternalAASequence</paramValue>
      <paramValue name="subjectExtDbRlsSpec">$$pdbExtDbRlsSpec$$</paramValue>
      <paramValue name="blastArgs">$$blastpPdbArgs$$</paramValue>
      <paramValue name="idRegex">(\\w+)\\s+mol:protein</paramValue>
      <paramValue name="blastType">blastp</paramValue>
      <paramValue name="vendor">wu</paramValue>
      <paramValue name="loadSubjectSubset">false</paramValue>
      <paramValue name="filterByTaxon">false</paramValue>
      <paramValue name="taxonHierarchyForFilter"></paramValue>
      <paramValue name="loadOptions">--noHSPs --subjectPvalue 1e-05 --subjectPctIdent 30</paramValue>
      <depends name="mirrorProteinsToCluster"/>
    </subgraph>

   <step name="document-blastpPdb"
          stepClass="ApiCommonWorkflow::Main::WorkflowSteps::InsertAnalysisMethod">
      <paramValue name="name">>WU-BLASTP (Annotated protein sequences vs. PDB)</paramValue>
      <paramValue name="tool">BLASTP</paramValue>
      <paramValue name="version">2.0 [06-Apr-2005]</paramValue>
      <paramValue name="category">Proteome</paramValue>
      <paramValue name="input">Query: Protein translations of annotated genes and; Subject: PDB</paramValue>
      <paramValue name="output">BLASTP alignments</paramValue>
      <paramValue name="parameters">$$blastpNrdbArgs$$</paramValue>
      <paramValue name="description">BLASTP translations of annotated genes against the Protein Data Bank (PDB).  WU-BLASTP is used to identify statistically significant protein-protein sequence similarities</paramValue>
      <paramValue name="pubmedId">2231712</paramValue>
      <paramValue name="url">http://blast.wustl.edu</paramValue>
      <paramValue name="credits"></paramValue>
      <depends name="blastpPdb"/>
    </step>


</workflowGraph>
