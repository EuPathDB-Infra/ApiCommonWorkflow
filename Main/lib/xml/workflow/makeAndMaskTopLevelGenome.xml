<workflowGraph name="makeAndMaskTopLevelGenome">
      <param name="dataDir"/>
      <param name="topLevelFastaFile"/>
      <param name="organismAbbrev"/>
      <param name="projectName"/>
      <param name="organismDatasetLoaderXmlFile"/>
      <param name="isAnnotatedGenome"/>
      <param name="isHugeGenome"/>
      <param name="isNotEbiGenome"/>

    <step name="makeDataDir" stepClass="ReFlow::StepClasses::MakeDataDir">
      <paramValue name="dataDir">$$dataDir$$</paramValue>
    </step>

  <!-- optional dataset.  the subgraph might be empty -->
  <subgraph name="insertPrimaryVirtualGenome" xmlFile="generated/$$projectName$$/$$organismAbbrev$$/primaryVirtualGenome.xml" excludeIfXmlFileDoesNotExist="true">
    <paramValue name="organismAbbrev">$$organismAbbrev$$</paramValue>
    <paramValue name="organismDatasetLoaderXmlFile">$$organismDatasetLoaderXmlFile$$</paramValue>
    <paramValue name="parentDataDir">$$dataDir$$</paramValue>
    <depends name="makeDataDir"/> 
  </subgraph>

  <step name="makeDerivedTables"
        stepClass="ApiCommonWorkflow::Main::WorkflowSteps::MakeDerivedTables" stepLoadTypes="tuningManager">
      <paramValue name="organismAbbrev">$$organismAbbrev$$</paramValue>
      <paramValue name="tables">SequencePieceClosure,GenomicSeqAttributes,TaxonSpecies</paramValue> 
    <depends name="insertPrimaryVirtualGenome"/> 
  </step>

  <!-- ApidbTuning.GenomicSeqAttributes -->
  <step name="extractTopLevelFastaSeqs"
          stepClass="ApiCommonWorkflow::Main::WorkflowSteps::ExtractTopLevelFastaSeqs">
      <paramValue name="organismAbbrev">$$organismAbbrev$$</paramValue>
      <paramValue name="outputFile">$$topLevelFastaFile$$</paramValue>
      <depends name="makeDerivedTables"/> 
    </step>

    <step name="makeClusterTaskInputDir" stepClass="ApiCommonWorkflow::Main::WorkflowSteps::MakeGenomeRepeatMaskTaskInputDir" includeIf="$$isAnnotatedGenome$$ &amp;&amp; !$$isHugeGenome$$ &amp;&amp; $$isNotEbiGenome$$">
      <paramValue name="taskInputDir">$$dataDir$$/input</paramValue>
      <paramValue name="seqsFile">$$topLevelFastaFile$$</paramValue>
      <paramValue name="dangleMax">0</paramValue>
      <paramValue name="trimDangling">n</paramValue>
      <paramValue name="options">-xsmall</paramValue>
      <paramValue name="organismAbbrev">$$organismAbbrev$$</paramValue>
      <depends name="extractTopLevelFastaSeqs"/>
    </step>


    <step name="mirrorToCluster" stepClass="ReFlow::StepClasses::MirrorToComputeCluster" includeIf="$$isAnnotatedGenome$$ &amp;&amp; !$$isHugeGenome$$ &amp;&amp; $$isNotEbiGenome$$" stepLoadTypes="toCluster">
      <paramValue name="fileOrDirToMirror">$$dataDir$$</paramValue>
      <depends name="makeClusterTaskInputDir"/>
    </step>

    <step name="runClusterTask" stepClass="ReFlow::StepClasses::RunAndMonitorDistribJob" stepLoadTypes="MaskTopLevelCluster" stepFailTypes="blatProteinCluster" includeIf="$$isAnnotatedGenome$$ &amp;&amp; !$$isHugeGenome$$ &amp;&amp; $$isNotEbiGenome$$">
      <paramValue name="taskInputDir">$$dataDir$$/input</paramValue>
      <paramValue name="numNodes">10</paramValue>
      <paramValue name="maxMemoryGigs">1.75</paramValue>
      <paramValue name="processorsPerNode">1</paramValue>
      <depends name="mirrorToCluster"/>
    </step>

    <step name="mirrorFromCluster" stepClass="ReFlow::StepClasses::MirrorFromComputeCluster" includeIf="$$isAnnotatedGenome$$ &amp;&amp; !$$isHugeGenome$$ &amp;&amp; $$isNotEbiGenome$$" stepLoadTypes="fromCluster">
      <paramValue name="fileOrDirToMirror">$$dataDir$$/master</paramValue>
      <paramValue name="outputDir">$$dataDir$$/master/mainresult</paramValue>
      <paramValue name="outputFiles">blocked.err,blocked.seq</paramValue>
      <paramValue name="deleteAfterCopy">true</paramValue>
      <depends name="runClusterTask"/>
    </step>

    <step name="makeMasterDir" stepClass="ReFlow::StepClasses::MakeDataDir" includeIf="$$isAnnotatedGenome$$ &amp;&amp; !$$isNotEbiGenome$$">
      <paramValue name="dataDir">$$dataDir$$/master</paramValue>
    <depends name="makeDataDir"/> 
    </step>

    <step name="makeMainResultDir" stepClass="ReFlow::StepClasses::MakeDataDir" includeIf="$$isAnnotatedGenome$$ &amp;&amp; !$$isNotEbiGenome$$">
      <paramValue name="dataDir">$$dataDir$$/master/mainresult</paramValue>
    <depends name="makeMasterDir"/> 
    </step>


    <step name="copyRepeatMaskedFasta" stepClass="ApiCommonWorkflow::Main::WorkflowSteps::CopyDataDirFile" includeIf="$$isAnnotatedGenome$$ &amp;&amp; !$$isNotEbiGenome$$">
      <paramValue name="fromFile">$$dataDir$$/../loadGenome/*_primary_genome_RSRC/ebi2gus_output/blocked.seq</paramValue>
      <paramValue name="toFile">$$dataDir$$/master/mainresult/blocked.seq</paramValue>
    <depends name="makeMainResultDir"/> 
    </step>


    <step name="document-mask_top_level_genome"
          stepClass="ApiCommonWorkflow::Main::WorkflowSteps::InsertAnalysisMethodInvocation">
      <paramValue name="method">mask_top_level_genome_MTHD</paramValue>
      <paramValue name="version">1.0</paramValue>
      <paramValue name="parameters">TODO: patch in later</paramValue>
    </step>

</workflowGraph>
